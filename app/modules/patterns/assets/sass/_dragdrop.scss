.drag-item {
  padding: 10px;
  border: 1px solid transparent;
  transition: all .3s;
  
  &:hover {
    background-color: $pb-bg3;
    cursor: pointer;
  }
  
  &:active {
    cursor: grab;
    background-color: $pb-bg5;
  }
  
  //the drop container
  &.gu-transit {
    background-color: $pb-bg3;
    border: 1px dashed $pb-bg5;
    opacity: 1;
  }
  
  //the dragged element
  &.gu-mirror {
    cursor: grabbing;
    opacity: 0.8;
    background-color: $pb-bg5;
    transition: opacity 0.4s ease-in-out;
    box-shadow: 0px 5px 10px -5px rgba(0,0,0,.5);
    transform: scale(1.1);
    transition: all 1s;
  }
}


/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */


// .ex-moved {
//   background-color: #e74c3c;
// }
// .ex-over {
//   background-color: rgba(255, 255, 255, 0.3);
// }
// .handle {
//   padding: 0 5px;
//   margin-right: 5px;
//   background-color: rgba(0, 0, 0, 0.4);
//   cursor: move;
// }


/* DOCUMENTATION TO BE MOVED */
.table-dragdrop {
  border: 0;
  font-size: 10px;
  
  thead tr.category th {
    font-weight: bold;
    color: #000;
  }
  
  thead tr th {
    border: 0;
    background-color: transparent;    
  }
  
  .column {
    width: 100px;
    vertical-align: top;
  }
  
  tbody tr td {
    border-color: $pb-light-gray;
    
    &.no-border {
      border: 0;
      vertical-align: middle;
    }
    
    &:empty {
      background-color: #f2f2f2;  
    }
    
  }
}
/* this file contains styles for the live preview site ONLY!
   these styles are not meant to be used on projects, only use the design_system.css */


@import 'variables';
@import 'mixins';
@import 'typography';

.clearfix {
  zoom: 1;
  &:before,
  &:after {
    display: table;

    content: '';
  }
  &:after {
    clear: both;
  }

}

// Bootstrap UI
.nav,
.pagination,
.carousel,
.panel-title a {
  cursor: pointer;
}
.debug {
  border: 1px solid #f00;
  &.green {
    border-color: #008000;
  }
  &.pink {
    border-color: #ffc0b0;
  }

}
.hero {
  height: 640px;

  background-image: url("../images/livepreview_keyboard.jpg");
  background-size: cover;
  .hero-unit {
    margin-top: 80px;

    color: #fff;
    border-top: 2px solid #fff;
    h1 {
      @extend %ps-light;
      font-size: 36px;
      padding-top: 20px;
      color: #fff;
    }
    h2 {
      @extend %ps-light;
      font-size: 22px;
      line-height: 1.3;
      color: #fff;
    }

  }
  .hero-menu {
    padding-left: 0;

    list-style-type: none;

    $accent: lighten(map-get($chord1, color4), 35%);
    > li {
      @extend %ps-regular;
      font-size: 18px;

      margin-top: 30px;
      padding-top: 10px;

      border-top: 1px solid $accent;

      a {
        color: $accent;
        &:hover {
          text-decoration: none;
        }

      }
      ul {
        margin-top: 5px;
        padding-left: 0;

        list-style-type: none;

        column-count: 3;
        li {
          a {
            color: #fff;
          }
        }
      }

    }
    .dropdown-header,
    .divider,
    .optional {
      display: none;
    }
  }

}
.home #footer {
  margin-top: 0;

}
.chord-display {
  margin-bottom: 20px;

}
// TODO: refactor below into loop; errors with interpolating variable name $chord1 etc.
#chord1 {
  .color1 {
    color: map-get($chord1, color1);

    fill: map-get($chord1, color1);
  }
  .color2 {
    color: map-get($chord1, color2);

    fill: map-get($chord1, color2);
  }
  .color3 {
    color: map-get($chord1, color3);

    fill: map-get($chord1, color3);
  }
  .color4 {
    color: map-get($chord1, color4);

    fill: map-get($chord1, color4);
  }

}
#chord2 {
  .color1 {
    color: map-get($chord2, color1);

    fill: map-get($chord2, color1);
  }
  .color2 {
    color: map-get($chord2, color2);

    fill: map-get($chord2, color2);
  }
  .color3 {
    color: map-get($chord2, color3);

    fill: map-get($chord2, color3);
  }
  .color4 {
    color: map-get($chord2, color4);

    fill: map-get($chord2, color4);
  }

}
#chord3 {
  .color1 {
    color: map-get($chord3, color1);

    fill: map-get($chord3, color1);
  }
  .color2 {
    color: map-get($chord3, color2);

    fill: map-get($chord3, color2);
  }
  .color3 {
    color: map-get($chord3, color3);

    fill: map-get($chord3, color3);
  }
  .color4 {
    color: map-get($chord3, color4);

    fill: map-get($chord3, color4);
  }

}
// spacing and page layout mods for the design system pages
section.row {
  margin-bottom: 60px;
}
h3.section-head,
h3.sh {
  clear: both;

  margin: 50px 0 20px;
  &:first-child {
    margin-top: 0;
  }

}
h6.sh {
  clear: both;

  margin-top: 40px;
  &:first-child {
    margin-top: 0;
  }

}
hr {
  margin-top: 30px;
  margin-bottom: 30px;
}
.grid-sample .panel {
  border: 0;
  border-top: 3px solid $gray;
  border-radius: 0;

}
//* HEADER & FOOTER EXAMPLES */
.header-title {
  margin-top: 40px;
  margin-bottom: 20px;
}
.footer-title {
  margin-top: 60px;
  margin-bottom: 20px;
}
.header-example {
  margin-bottom: 20px;

  box-shadow: 0 0 20px rgba(0, 0, 0, .1);
}
.footer-example {
  box-shadow: 0 0 6px rgba(0, 0, 0, .2);
  &.footer-last {
    margin-bottom: 120px;
  }

}
//* Linear Gradients & Pseudo Element */
.pseudo {
  position: relative;
  z-index: 2;

  box-sizing: border-box;

  border-bottom: 10px solid transparent;
  background-color: #fff;
  background-clip: padding-box;

  -webkit-filter: drop-shadow(rgba(0, 0, 0, .55) 0 1px 2px);
}
.pseudo:after {
  position: absolute;
  z-index: 1;
  bottom: -10px;
  left: 0;

  display: block;

  width: 100%;
  height: 10px;

  content: '';

  background-image: linear-gradient(45deg, rgba(0, 0, 0, 0) 33.333%, #fff 33.333%, #fff 66.667%, rgba(0, 0, 0, 0) 66.667%), linear-gradient(-45deg, rgba(0, 0, 0, 0) 33.333%, #fff 33.333%, #fff 66.667%, rgba(0, 0, 0, 0) 66.667%);
  background-repeat: repeat-x;
  background-position: 50% -30px;
  background-size: 20px 40px;

}
//* Charting Demos */

.piechart {
  position: relative;

  display: inline-block;
  span {
    font-size: 20px;

    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 100%;
    height: 100%;
    padding-top: 35%;

    text-align: center;
  }

}
.sparkline {
  .chart {
    display: inline-block;
    float: left;
  }
  .caption {
    display: inline-block;
    float: left;

    margin-left: 10px;
  }
  h6 {
    margin-top: 0;
    margin-bottom: 0;
  }
  h2 {
    margin-top: 0;
    margin-bottom: 0;
  }

}
legend .more-info,
h3 .more-info,
h1 .more-info {
  font-size: 14px;
  line-height: 1;

  float: right;

  margin-top: 10px;

}
//* the tab that pops out of the  Live Preview */

$tab-color: #333;

.settings {
  position: fixed;
  z-index: 2000;
  top: 60px;
  right: -150px;

  width: 185px;
  height: 100px;

  transition: all 0.3s;
  &.activate {
    right: 0;

    width: 185px;
  }
  .settings-tab {
    float: left;

    width: 35px;
    padding: 5px;

    text-align: center;

    color: #fff;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
    background: $tab-color;
    box-shadow: 3px 5px 8px rgba(0, 0, 0, .3);
    &:hover {
      cursor: pointer;
    }
    &:active {
      background: #71a6b9;
    }

  }
  .settings-form {
    float: right;

    width: 150px;
    height: 125px;
    padding: 0 10px 10px 15px;

    color: #fff;
    border-bottom-left-radius: 5px;
    background-color: $tab-color;
    box-shadow: 3px 5px 8px rgba(0, 0, 0, .3);
    label {
      font-size: 12px !important;

      color: #fff;
    }
  }

}
p[class^='bg'] {
  padding: 10px;

}
//* Color swatches */
.row-left-border {
  border-left: 1px solid $gray;
}
.color-swatches {
  margin-bottom: 20px;
  .color-swatch-container {
    margin-bottom: 30px;
  }
  .color-swatch {
    display: block;

    width: 100%;
    // set them to use the BS grid
    height: 72px;
    margin-bottom: 5px;
    &[class*='alert'] {
      border-right-width: 16px;
      border-right-style: solid;
    }
    &.color-swatch-small {
      display: inline-block;

      width: 33px;
      height: 33px;
    }

  }
  p {
    font-size: 14px;

    color: $gray-text;
    small {
      font-size: 11px;
      line-height: 1.2;
    }
  }

}
//* color charts */
.color-chart-nested {
  position: relative;

  float: left;

  margin-right: 30px;
  .pie {
    position: absolute;
    top: 86px;
    left: 86px;
  }

}
.color-blocks {
  li {
    margin-bottom: 7px;
    span {
      display: inline-block;

      width: 35px;
      height: 35px;
      margin-right: 15px;

      vertical-align: middle;
    }
  }

}
.donut-varied-padded {
  margin-right: 25px;
  margin-left: 25px;
}
.fpo-grad {
  padding: 10px;

  background-color: #aaa;
}
.glyphicons {
  li {
    font-size: 0.8em;

    margin-bottom: 20px;

    text-align: center;
    .glyphicon,
    .pbfont {
      //font-size: 2em;
    }
  }

}
.text-center {
  .pie,
  .donut {
    width: 100px;
    margin: 0 auto 20px;
  }

}
.clearRow {
  clear: left;

}
//
// //* color swatch backgrounds */

.brand-primary {
  background-color: $brand-primary;
}
.brand-success {
  background-color: $brand-success;
}
.brand-danger {
  background-color: $brand-error;
}
.brand-info {
  background-color: $brand-info;
}
.brand-warning {
  background-color: $brand-warning;

}
//
// .gray-dark { background-color    : $gray-dark; }
// .gray-text { background-color    : $gray-text; }
// .gray { background-color     		 : $gray; }
// .gray-light { background-color   : $gray-light; }
// .gray-disabled { background-color: $gray-disabled; }
// .link-hover { background-color   : $link-color-hover; }
// .link-disabled { background-color: $link-color-disabled; }

.chart-green {
  background-color: $chart-green;
}
.chart-blue {
  background-color: $chart-blue;
}
.chart-purple {
  background-color: $chart-purple;
}
.chart-yellow {
  background-color: $chart-yellow;
}
.chart-orange {
  background-color: $chart-orange;
}
.chart-red {
  background-color: $chart-red;

}
//
.blue1 {
  background-color: $blue1;
}
.blue2 {
  background-color: $blue2;
}
.blue3 {
  background-color: $blue3;
}
.blue4 {
  background-color: $blue4;
}
.blue5 {
  background-color: $blue5;
}
.blue6 {
  background-color: $blue6;
}
.gray1 {
  background-color: $gray1;
}
.gray2 {
  background-color: $gray2;
}
.gray3 {
  background-color: $gray3;
}
.gray4 {
  background-color: $gray4;
}
.gray5 {
  background-color: $gray5;
}
.gray6 {
  background-color: $gray6;

}
//* panels page */
.list-group-details {
  .form-group {
    margin-bottom: 0;
  }
  .control-label {
    padding-top: 3px;
    padding-right: 0;

    text-align: left;
    strong {
      font-weight: normal;

      padding-right: 0.3em;

      color: $gray-text;
      background-color: #fff;
    }
    &:before {
      float: left;

      width: 0;

      content: '..........................................';
      white-space: nowrap;

      color: $gray;
    }

  }
  .form-control-static {
    padding-top: 2px;
    padding-bottom: 2px;
    padding-left: 0.3em;

    word-wrap: break-word;

    background-color: #fff;
  }

}
.view-animate {
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  &.ng-enter,
  &.ng-leave {
    opacity: 1;
  }
  &.ng-enter,
  &.ng-leave-active,
  &.ng-hide {
    height: 0;

    opacity: 0;
  }
}



//* experimental block grid code, will not work in IE8  */
// used to display icons on icons page
[class*="block-grid-"] {
    display: block;
    padding: 0;
    margin: 0 -.55556rem;
    @include clearfix;
    > li {
        display: block;
        height: auto;
        float: left;
        padding: 0 .55556rem 1.11111rem;
    }
}

.block-grid-6 > li {
  width: 16.66666%;
}

.small-block-grid-3 > li {
    width: 33.33333%;
    list-style: none;
}

.small-block-grid-3 > li:nth-of-type(1n) {
    clear: none;
}

.small-block-grid-3 > li:nth-of-type(3n+1) {
    clear: both;
}
